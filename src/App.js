import './index.css';
import { useState, useEffect } from 'react';
import computer from "./imgs/computer.svg";

function App() {
  const [value, setValue] = useState(null)
  const [message, setMessage] = useState(null);
  const [previousChats, setPreviousChats] = useState([])
  const [currentTitle, setCurrentTitle] = useState(null)

  function createNewChat(){
    setMessage(null)
    setValue("")
    setCurrentTitle(null)
  }

  function handleClick(uniqueTitle){
    setCurrentTitle(uniqueTitle)
    setMessage(null)
    setValue("")
  }

  const getMessages = async() => {

    const options = {
      method: "POST",
      body: JSON.stringify({
        message: value
      }),
      headers: {
        "Content-Type" : "application/json"
      }
    }

    try {
      const response = await fetch('http://localhost:8000/completions', options)
      const data = await response.json()

      // console.log(data);
      setMessage(data.choices[0].message);
    } catch (error) {
      console.error(error)
    }
  }

  useEffect(() => {

    if(!currentTitle && value && message){
      setCurrentTitle(value);
    }
    if(currentTitle && value && message){
      setPreviousChats(previousChats => (
        [...previousChats,
          {
            title: currentTitle,
            role: "user",
            content: value
          }, 

          {
            title: currentTitle,
            role: message.role,
            content: message.content
          }
      ]
      ))
    }
  }, [message, currentTitle])

  const currentChat = previousChats.filter(previousChat => previousChat.title === currentTitle)

  const uniqueTitles = Array.from(new Set(previousChats.map(previousChat => previousChat.title)))

  return (
    <div className="App">
      <section className='side-bar'>
      
        <button onClick={createNewChat}>+ New chat</button>
        
        <ul className='history'>
          {uniqueTitles?.map((uniqueTitle, index) => <li key={index} onClick={() => handleClick(uniqueTitle)}>{uniqueTitle}</li>)}
        </ul>
        <nav>
        <svg width="127" height="127" viewBox="0 0 127 127" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M127 63.5C127 98.5701 98.5701 127 63.5 127C28.4299 127 0 98.5701 0 63.5C0 28.4299 28.4299 0 63.5 0C98.5701 0 127 28.4299 127 63.5Z" fill="url(#paint0_linear_40_5)"/>
<path d="M40.585 63.675C40.425 63.095 40.15 62.645 39.76 62.325C39.37 61.995 38.875 61.83 38.275 61.83C37.815 61.83 37.42 61.925 37.09 62.115C36.76 62.305 36.49 62.56 36.28 62.88C36.07 63.19 35.915 63.545 35.815 63.945C35.715 64.335 35.665 64.73 35.665 65.13C35.665 65.54 35.71 65.94 35.8 66.33C35.9 66.72 36.055 67.07 36.265 67.38C36.475 67.69 36.745 67.94 37.075 68.13C37.405 68.31 37.805 68.4 38.275 68.4C38.945 68.4 39.48 68.215 39.88 67.845C40.29 67.475 40.55 66.965 40.66 66.315H41.62C41.54 66.745 41.41 67.14 41.23 67.5C41.06 67.85 40.835 68.155 40.555 68.415C40.285 68.665 39.96 68.86 39.58 69C39.2 69.14 38.765 69.21 38.275 69.21C37.655 69.21 37.12 69.105 36.67 68.895C36.22 68.685 35.85 68.4 35.56 68.04C35.27 67.67 35.055 67.235 34.915 66.735C34.775 66.235 34.705 65.7 34.705 65.13C34.705 64.59 34.78 64.075 34.93 63.585C35.09 63.085 35.32 62.645 35.62 62.265C35.92 61.885 36.29 61.585 36.73 61.365C37.18 61.135 37.695 61.02 38.275 61.02C39.175 61.02 39.9 61.235 40.45 61.665C41.01 62.095 41.36 62.765 41.5 63.675H40.585ZM43.415 69V58.2H44.315V62.31C44.675 61.93 45.045 61.62 45.425 61.38C45.815 61.14 46.28 61.02 46.82 61.02C47.3 61.02 47.745 61.105 48.155 61.275C48.565 61.435 48.91 61.72 49.19 62.13C49.38 62.41 49.49 62.7 49.52 63C49.56 63.29 49.58 63.595 49.58 63.915V69H48.68V63.93C48.68 63.23 48.525 62.705 48.215 62.355C47.905 62.005 47.39 61.83 46.67 61.83C46.39 61.83 46.135 61.875 45.905 61.965C45.675 62.045 45.465 62.155 45.275 62.295C45.095 62.435 44.94 62.595 44.81 62.775C44.68 62.955 44.58 63.145 44.51 63.345C44.42 63.595 44.365 63.835 44.345 64.065C44.325 64.295 44.315 64.545 44.315 64.815V69H43.415ZM56.8349 64.92C56.4549 65.08 56.0699 65.185 55.6799 65.235C55.2899 65.285 54.8999 65.325 54.5099 65.355C53.8199 65.405 53.2799 65.56 52.8899 65.82C52.5099 66.08 52.3199 66.475 52.3199 67.005C52.3199 67.245 52.3649 67.455 52.4549 67.635C52.5549 67.805 52.6799 67.95 52.8299 68.07C52.9899 68.18 53.1699 68.265 53.3699 68.325C53.5799 68.375 53.7899 68.4 53.9999 68.4C54.3599 68.4 54.7099 68.355 55.0499 68.265C55.3899 68.175 55.6899 68.04 55.9499 67.86C56.2199 67.67 56.4349 67.435 56.5949 67.155C56.7549 66.865 56.8349 66.525 56.8349 66.135V64.92ZM55.3199 64.47C55.4899 64.45 55.6899 64.42 55.9199 64.38C56.1599 64.34 56.3549 64.285 56.5049 64.215C56.6549 64.145 56.7449 64.03 56.7749 63.87C56.8149 63.7 56.8349 63.545 56.8349 63.405C56.8349 62.945 56.6849 62.57 56.3849 62.28C56.0949 61.98 55.5999 61.83 54.8999 61.83C54.5899 61.83 54.3049 61.86 54.0449 61.92C53.7849 61.97 53.5549 62.065 53.3549 62.205C53.1649 62.335 53.0049 62.515 52.8749 62.745C52.7549 62.965 52.6749 63.245 52.6349 63.585H51.7199C51.7499 63.125 51.8549 62.735 52.0349 62.415C52.2149 62.085 52.4449 61.82 52.7249 61.62C53.0149 61.41 53.3449 61.26 53.7149 61.17C54.0949 61.07 54.4949 61.02 54.9149 61.02C55.3049 61.02 55.6699 61.065 56.0099 61.155C56.3599 61.235 56.6599 61.37 56.9099 61.56C57.1699 61.74 57.3699 61.985 57.5099 62.295C57.6599 62.605 57.7349 62.985 57.7349 63.435V67.665C57.7349 68.015 57.7949 68.24 57.9149 68.34C58.0449 68.43 58.2999 68.405 58.6799 68.265V68.97C58.6099 68.99 58.5049 69.02 58.3649 69.06C58.2349 69.1 58.1049 69.12 57.9749 69.12C57.8349 69.12 57.6999 69.105 57.5699 69.075C57.4199 69.055 57.2999 69.01 57.2099 68.94C57.1199 68.86 57.0449 68.77 56.9849 68.67C56.9349 68.56 56.8999 68.445 56.8799 68.325C56.8599 68.195 56.8499 68.06 56.8499 67.92C56.4699 68.34 56.0349 68.66 55.5449 68.88C55.0549 69.1 54.5249 69.21 53.9549 69.21C53.6149 69.21 53.2849 69.165 52.9649 69.075C52.6549 68.985 52.3799 68.845 52.1399 68.655C51.8999 68.465 51.7099 68.235 51.5699 67.965C51.4299 67.685 51.3599 67.355 51.3599 66.975C51.3599 65.655 52.2649 64.875 54.0749 64.635L55.3199 64.47ZM62.8149 69.03C62.7049 69.05 62.5599 69.085 62.3799 69.135C62.1999 69.185 61.9999 69.21 61.7799 69.21C61.3299 69.21 60.9849 69.1 60.7449 68.88C60.5149 68.65 60.3999 68.245 60.3999 67.665V61.98H59.3049V61.23H60.3999V59.07H61.2999V61.23H62.7549V61.98H61.2999V67.305C61.2999 67.495 61.3049 67.66 61.3149 67.8C61.3249 67.94 61.3549 68.055 61.4049 68.145C61.4549 68.235 61.5299 68.3 61.6299 68.34C61.7399 68.38 61.8899 68.4 62.0799 68.4C62.1999 68.4 62.3199 68.39 62.4399 68.37C62.5699 68.35 62.6949 68.325 62.8149 68.295V69.03ZM68.9847 64.29V63.42H73.6047V69H72.7347V67.155C72.5447 67.475 72.3247 67.77 72.0747 68.04C71.8347 68.3 71.5547 68.525 71.2347 68.715C70.9147 68.895 70.5447 69.035 70.1247 69.135C69.7047 69.235 69.2297 69.285 68.6997 69.285C68.0197 69.285 67.3897 69.165 66.8097 68.925C66.2297 68.685 65.7297 68.33 65.3097 67.86C64.8897 67.38 64.5597 66.78 64.3197 66.06C64.0897 65.34 63.9747 64.5 63.9747 63.54C63.9747 62.75 64.0747 62.015 64.2747 61.335C64.4747 60.645 64.7797 60.05 65.1897 59.55C65.6097 59.04 66.1297 58.64 66.7497 58.35C67.3797 58.06 68.1197 57.915 68.9697 57.915C69.5397 57.915 70.0697 57.985 70.5597 58.125C71.0597 58.265 71.5047 58.48 71.8947 58.77C72.2947 59.05 72.6297 59.405 72.8997 59.835C73.1697 60.255 73.3647 60.755 73.4847 61.335H72.4347C72.3447 60.935 72.1897 60.575 71.9697 60.255C71.7597 59.935 71.5047 59.67 71.2047 59.46C70.9047 59.24 70.5697 59.075 70.1997 58.965C69.8297 58.845 69.4447 58.785 69.0447 58.785C68.3347 58.785 67.7247 58.91 67.2147 59.16C66.7047 59.41 66.2847 59.765 65.9547 60.225C65.6247 60.675 65.3797 61.22 65.2197 61.86C65.0697 62.49 64.9947 63.185 64.9947 63.945C64.9947 64.545 65.0797 65.115 65.2497 65.655C65.4297 66.195 65.6847 66.67 66.0147 67.08C66.3547 67.49 66.7647 67.815 67.2447 68.055C67.7347 68.295 68.2897 68.415 68.9097 68.415C69.1997 68.415 69.4997 68.385 69.8097 68.325C70.1197 68.255 70.4197 68.145 70.7097 67.995C70.9997 67.845 71.2697 67.65 71.5197 67.41C71.7697 67.17 71.9847 66.875 72.1647 66.525C72.3347 66.185 72.4497 65.83 72.5097 65.46C72.5797 65.09 72.6197 64.7 72.6297 64.29H68.9847ZM76.0245 69V58.2H79.9695C80.6695 58.2 81.2445 58.28 81.6945 58.44C82.1545 58.6 82.5145 58.82 82.7745 59.1C83.0445 59.38 83.2295 59.705 83.3295 60.075C83.4395 60.435 83.4945 60.815 83.4945 61.215C83.4945 61.815 83.3695 62.31 83.1195 62.7C82.8795 63.09 82.5645 63.4 82.1745 63.63C81.7845 63.85 81.3395 64.005 80.8395 64.095C80.3495 64.185 79.8545 64.23 79.3545 64.23H77.0445V69H76.0245ZM79.3845 63.36C79.8645 63.36 80.2945 63.33 80.6745 63.27C81.0545 63.21 81.3745 63.1 81.6345 62.94C81.9045 62.77 82.1095 62.545 82.2495 62.265C82.3995 61.975 82.4745 61.6 82.4745 61.14C82.4745 60.46 82.2495 59.945 81.7995 59.595C81.3595 59.245 80.6545 59.07 79.6845 59.07H77.0445V63.36H79.3845ZM84.2644 58.2H92.1244V59.07H88.7044V69H87.6844V59.07H84.2644V58.2Z" fill="white"/>
<defs>
<linearGradient id="paint0_linear_40_5" x1="63.5" y1="0" x2="63.5" y2="127" gradientUnits="userSpaceOnUse">
<stop stop-color="#E1D911"/>
<stop offset="1" stop-color="#1511E1" stop-opacity="0"/>
</linearGradient>
</defs>
</svg>

          {/* <p>MADE BY SANJ</p> */}
        </nav>
      </section>
      <section className='main'>
        {/* {!currentTitle && <h1>SanjGPT</h1>} */}

        <ul className='feed'>
          {
            currentChat.map((chatMessage,index) => <li key={index}>
              <p className='role'>{chatMessage.role}</p>
              <p>{chatMessage.content}</p>
            </li>)
          }
        </ul>
        <div className='bottom-section'>
          <div className="input-container">
            <input type="text" value={value} onChange={(e) => setValue(e.target.value)}/>
            <div id="submit" onClick={getMessages}>></div>
          </div>
          <p className='info'>
          GPT-4 is OpenAIâ€™s most advanced system, producing safer and more useful responses
          </p>
        </div>
      </section>
    </div>
  );
}

export default App;
